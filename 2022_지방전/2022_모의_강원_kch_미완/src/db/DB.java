package db;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;

public class DB {
	public static Connection con;
	public static Statement stmt;
	static {
		try {
			con = DriverManager.getConnection(
					"jdbc:mysql://localhost?serverTimezone=UTC&allowPublicKeyRetreival=true&allowLoadLocalInfile=true",
					"root", "1234");
			stmt = con.createStatement();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	void execute(String sql) {
		try {
			stmt.execute(sql);
		} catch (SQLException e) {
			System.out.println(sql);
			e.printStackTrace();
		}
	}

	void createT(String t) {

		execute("load data local infile './지급파일/" + t + ".csv' into table " + t
				+ " fields terminated by ',' lines terminated by '\r\n' ignore 1 lines");
	}

	public DB() throws FileNotFoundException {
		
		for (var str : ("-- MySQL Script generated by MySQL Workbench\r\n" + "-- Fri Sep 24 10:43:13 2021\r\n"
				+ "-- Model: New Model    Version: 1.0\r\n" + "-- MySQL Workbench Forward Engineering\r\n" + "\r\n"
				+ "SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\r\n"
				+ "SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\r\n"
				+ "SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Schema busticketbooking\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP SCHEMA IF EXISTS `busticketbooking` ;\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n" + "-- Schema busticketbooking\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "CREATE SCHEMA IF NOT EXISTS `busticketbooking` DEFAULT CHARACTER SET utf8 ;\r\n"
				+ "USE `busticketbooking` ;\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`user`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`user` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`user` (\r\n"
				+ "  `no` INT NOT NULL AUTO_INCREMENT,\r\n" + "  `id` VARCHAR(50) NOT NULL,\r\n"
				+ "  `pwd` VARCHAR(50) NOT NULL,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
				+ "  `email` VARCHAR(50) NOT NULL,\r\n" + "  `point` INT NOT NULL,\r\n" + "  PRIMARY KEY (`no`))\r\n"
				+ "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`location`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`location` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`location` (\r\n"
				+ "  `no` INT NOT NULL AUTO_INCREMENT,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
				+ "  PRIMARY KEY (`no`))\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`location2`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`location2` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`location2` (\r\n"
				+ "  `NO` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
				+ "  `location_no` INT(11) NOT NULL,\r\n" + "  PRIMARY KEY (`NO`),\r\n"
				+ "  INDEX `fk_location2_location_idx` (`location_no` ASC),\r\n"
				+ "  CONSTRAINT `fk_location2_location`\r\n" + "    FOREIGN KEY (`location_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`location` (`no`)\r\n" + "    ON DELETE CASCADE\r\n"
				+ "    ON UPDATE CASCADE)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`schedule`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`schedule` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`schedule` (\r\n"
				+ "  `no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `departure_location2_no` INT(11) NOT NULL,\r\n"
				+ "  `arrival_location2_no` INT(11) NOT NULL,\r\n" + "  `date` DATETIME NOT NULL,\r\n"
				+ "  `elapsed_time` TIME NOT NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
				+ "  INDEX `fk_schedule_location21_idx` (`departure_location2_no` ASC),\r\n"
				+ "  INDEX `fk_schedule_location22_idx` (`arrival_location2_no` ASC),\r\n"
				+ "  CONSTRAINT `fk_schedule_location21`\r\n" + "    FOREIGN KEY (`departure_location2_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`location2` (`NO`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION,\r\n" + "  CONSTRAINT `fk_schedule_location22`\r\n"
				+ "    FOREIGN KEY (`arrival_location2_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`location2` (`NO`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`reservation`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`reservation` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`reservation` (\r\n"
				+ "  `no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `user_no` INT(11) NULL,\r\n"
				+ "  `schedule_no` INT(11) NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
				+ "  INDEX `fk_reservation_schedule1_idx` (`schedule_no` ASC),\r\n"
				+ "  INDEX `fk_reservation_user1_idx` (`user_no` ASC),\r\n"
				+ "  CONSTRAINT `fk_reservation_schedule1`\r\n" + "    FOREIGN KEY (`schedule_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`schedule` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION,\r\n" + "  CONSTRAINT `fk_reservation_user1`\r\n"
				+ "    FOREIGN KEY (`user_no`)\r\n" + "    REFERENCES `busticketbooking`.`user` (`no`)\r\n"
				+ "    ON DELETE NO ACTION\r\n" + "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n"
				+ "\r\n" + "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`recommend`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`recommend` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`recommend` (\r\n" + "  `no` INT(11) NOT NULL,\r\n"
				+ "  `location_no` INT(11) NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
				+ "  INDEX `fk_recommend_location1_idx` (`location_no` ASC),\r\n"
				+ "  CONSTRAINT `fk_recommend_location1`\r\n" + "    FOREIGN KEY (`location_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`location` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "-- Table `busticketbooking`.`recommend_info`\r\n"
				+ "-- -----------------------------------------------------\r\n"
				+ "DROP TABLE IF EXISTS `busticketbooking`.`recommend_info` ;\r\n" + "\r\n"
				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`recommend_info` (\r\n"
				+ "  `recommend_no` INT NOT NULL,\r\n" + "  `title` VARCHAR(50) NOT NULL,\r\n"
				+ "  `description` VARCHAR(1000) NULL,\r\n" + "  `img` LONGBLOB NOT NULL,\r\n"
				+ "  PRIMARY KEY (`title`,`recommend_no`),\r\n"
				+ "  INDEX `fk_recommend_info_recommend1_idx` (`recommend_no` ASC),\r\n"
				+ "  CONSTRAINT `fk_recommend_info_recommend1`\r\n" + "    FOREIGN KEY (`recommend_no`)\r\n"
				+ "    REFERENCES `busticketbooking`.`recommend` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "SET SQL_MODE = '';\r\n"
				+ "DROP USER IF EXISTS user@localhost;\r\n" + "SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';\r\n"
				+ "drop user if exists user@localhost\r\n;" + "create user user@localhost identified by '1234';\r\n"
				+ "GRANT SELECT, INSERT,  UPDATE, DELETE ON  `busticketbooking`.* TO user@localhost;\r\n"
				+ "SET SQL_MODE=@OLD_SQL_MODE;\r\n" + "SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\r\n"
				+ "SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\r\n").split(";")) {
			if (!str.trim().isEmpty())
				execute(str);
		}

		execute("set global local_infile = 1");
		execute("use busticketbooking");
		for (var str : "location,location2,user,recommend,recommend_info,schedule,reservation".split(",")) {
			createT(str);
		}

		var map = new HashMap<String, String>();

		map.put("부산", "busan");
		map.put("강원도", "gangwondo");
		map.put("광주", "gyeongju");
		map.put("전라남도", "Jeollanam-do");
		map.put("서울", "seoul");
		
		try {
			var rs = stmt.executeQuery(
					"select title, l.name, ri.recommend_no from recommend_info ri inner join recommend r on ri.recommend_no = r.no inner join location l on r.location_no = l.no ");
			while (rs.next()) {
				var pst = con
						.prepareStatement("update recommend_info set img = ? where title = ? and recommend_no = ?");
				pst.setBinaryStream(1, new FileInputStream(
						new File("./지급파일/images/recommend/" + map.get(rs.getString(2)) + "/" + rs.getInt(1) + ".jpg")));
				pst.setInt(2, rs.getInt(1));
				pst.setInt(3, rs.getInt(3));
				pst.execute();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		try {
			new DB();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
