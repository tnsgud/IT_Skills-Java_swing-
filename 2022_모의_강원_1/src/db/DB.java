package db;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

public class DB {
	static Connection con;
	static Statement stmt;
	static PreparedStatement ps;

	static {
		try {
			con = DriverManager.getConnection(
					"jdbc:mysql://localhost?serverTimezone=UTC&allowPublicKeyRetreival=true&allowLoadLocalInfile=true",
					"root", "1234");
			stmt = con.createStatement();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static void execute(String sql, Object... obj) {
		try {
			ps = con.prepareStatement(sql);
			for (int i = 0; i < obj.length; i++) {
				ps.setObject(i + 1, obj[i]);
			}
			ps.execute();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static ResultSet rs(String sql, Object... obj) {
		try {
			ps = con.prepareStatement(sql);
			for (int i = 0; i < obj.length; i++) {
				ps.setObject(i + 1, obj[i]);
			}
			return ps.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
	}

	public static String getOne(String sql, Object... obj) {
		try {
			var rs = rs(sql, obj);
			if (rs.next()) {
				return rs.getString(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	void execute(String sql) {
		try {
			stmt.execute(sql);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	void createT(String t, String c) {
		execute("create table "+t+"("+c+")");
		execute("load data local infile './지급파일/" + t + ".csv' into table " + t
				+ " fields terminated by ',' lines terminated by '\r\n' ignore 1 lines");
	}

	public DB() throws SQLException, FileNotFoundException {
//		for (var str : ("-- MySQL Script generated by MySQL Workbench\r\n" + "-- Fri Sep 24 10:43:13 2021\r\n"
//				+ "-- Model: New Model    Version: 1.0\r\n" + "-- MySQL Workbench Forward Engineering\r\n" + "\r\n"
//				+ "SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\r\n"
//				+ "SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\r\n"
//				+ "SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n" + "-- Schema busticketbooking\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP SCHEMA IF EXISTS `busticketbooking` ;\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n" + "-- Schema busticketbooking\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "CREATE SCHEMA IF NOT EXISTS `busticketbooking` DEFAULT CHARACTER SET utf8 ;\r\n"
//				+ "USE `busticketbooking` ;\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`user`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`user` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`user` (\r\n"
//				+ "  `no` INT NOT NULL AUTO_INCREMENT,\r\n" + "  `id` VARCHAR(50) NOT NULL,\r\n"
//				+ "  `pwd` VARCHAR(50) NOT NULL,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
//				+ "  `email` VARCHAR(50) NOT NULL,\r\n" + "  `point` INT NOT NULL,\r\n" + "  PRIMARY KEY (`no`))\r\n"
//				+ "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`location`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`location` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`location` (\r\n"
//				+ "  `no` INT NOT NULL AUTO_INCREMENT,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
//				+ "  PRIMARY KEY (`no`))\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`location2`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`location2` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`location2` (\r\n"
//				+ "  `NO` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `name` VARCHAR(50) NOT NULL,\r\n"
//				+ "  `location_no` INT(11) NOT NULL,\r\n" + "  PRIMARY KEY (`NO`),\r\n"
//				+ "  INDEX `fk_location2_location_idx` (`location_no` ASC),\r\n"
//				+ "  CONSTRAINT `fk_location2_location`\r\n" + "    FOREIGN KEY (`location_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`location` (`no`)\r\n" + "    ON DELETE CASCADE\r\n"
//				+ "    ON UPDATE CASCADE)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`schedule`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`schedule` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`schedule` (\r\n"
//				+ "  `no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `departure_location2_no` INT(11) NOT NULL,\r\n"
//				+ "  `arrival_location2_no` INT(11) NOT NULL,\r\n" + "  `date` DATETIME NOT NULL,\r\n"
//				+ "  `elapsed_time` TIME NOT NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
//				+ "  INDEX `fk_schedule_location21_idx` (`departure_location2_no` ASC),\r\n"
//				+ "  INDEX `fk_schedule_location22_idx` (`arrival_location2_no` ASC),\r\n"
//				+ "  CONSTRAINT `fk_schedule_location21`\r\n" + "    FOREIGN KEY (`departure_location2_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`location2` (`NO`)\r\n" + "    ON DELETE NO ACTION\r\n"
//				+ "    ON UPDATE NO ACTION,\r\n" + "  CONSTRAINT `fk_schedule_location22`\r\n"
//				+ "    FOREIGN KEY (`arrival_location2_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`location2` (`NO`)\r\n" + "    ON DELETE NO ACTION\r\n"
//				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`reservation`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`reservation` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`reservation` (\r\n"
//				+ "  `no` INT(11) NOT NULL AUTO_INCREMENT,\r\n" + "  `user_no` INT(11) NULL,\r\n"
//				+ "  `schedule_no` INT(11) NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
//				+ "  INDEX `fk_reservation_schedule1_idx` (`schedule_no` ASC),\r\n"
//				+ "  INDEX `fk_reservation_user1_idx` (`user_no` ASC),\r\n"
//				+ "  CONSTRAINT `fk_reservation_schedule1`\r\n" + "    FOREIGN KEY (`schedule_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`schedule` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
//				+ "    ON UPDATE NO ACTION,\r\n" + "  CONSTRAINT `fk_reservation_user1`\r\n"
//				+ "    FOREIGN KEY (`user_no`)\r\n" + "    REFERENCES `busticketbooking`.`user` (`no`)\r\n"
//				+ "    ON DELETE NO ACTION\r\n" + "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n"
//				+ "\r\n" + "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`recommend`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`recommend` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`recommend` (\r\n" + "  `no` INT(11) NOT NULL,\r\n"
//				+ "  `location_no` INT(11) NULL,\r\n" + "  PRIMARY KEY (`no`),\r\n"
//				+ "  INDEX `fk_recommend_location1_idx` (`location_no` ASC),\r\n"
//				+ "  CONSTRAINT `fk_recommend_location1`\r\n" + "    FOREIGN KEY (`location_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`location` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
//				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "-- Table `busticketbooking`.`recommend_info`\r\n"
//				+ "-- -----------------------------------------------------\r\n"
//				+ "DROP TABLE IF EXISTS `busticketbooking`.`recommend_info` ;\r\n" + "\r\n"
//				+ "CREATE TABLE IF NOT EXISTS `busticketbooking`.`recommend_info` (\r\n"
//				+ "  `recommend_no` INT NOT NULL,\r\n" + "  `title` VARCHAR(50) NOT NULL,\r\n"
//				+ "  `description` VARCHAR(1000) NULL,\r\n" + "  `img` LONGBLOB NOT NULL,\r\n"
//				+ "  PRIMARY KEY (`title`,`recommend_no`),\r\n"
//				+ "  INDEX `fk_recommend_info_recommend1_idx` (`recommend_no` ASC),\r\n"
//				+ "  CONSTRAINT `fk_recommend_info_recommend1`\r\n" + "    FOREIGN KEY (`recommend_no`)\r\n"
//				+ "    REFERENCES `busticketbooking`.`recommend` (`no`)\r\n" + "    ON DELETE NO ACTION\r\n"
//				+ "    ON UPDATE NO ACTION)\r\n" + "ENGINE = InnoDB;\r\n" + "\r\n" + "SET SQL_MODE = '';\r\n"
//				+ "DROP USER IF EXISTS user@localhost;\r\n" + "SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';\r\n"
//				+ "drop user if exists user@localhost\r\n;" + "create user user@localhost identified by '1234';\r\n"
//				+ "GRANT SELECT, INSERT,  UPDATE, DELETE ON  `busticketbooking`.* TO user@localhost;\r\n"
//				+ "SET SQL_MODE=@OLD_SQL_MODE;\r\n" + "SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\r\n"
//				+ "SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\r\n").split(";")) {
//			if (!str.trim().isEmpty())
//				execute(str);
//		}
		
		execute("drop database if exists busticketbooking");
		execute("create database busticketbooking default character set utf8");
		execute("drop user if exists user@localhost");
		execute("create user user@localhost identified by '1234'");
		execute("grant select, update, insert, delete on busticketbooking. *to user@localhost");
		execute("set global local_infile = 1");
		execute("use busticketbooking");
		
		createT("user", "no int primary key not null auto_increment, id varchar(50), pwd varchar(50), name varchar(50), email varchar(50), point int");
		createT("location", "no int primary key not null auto_increment, name varchar(50)");
		createT("location2", "no int primary key not null auto_increment, name varchar(50), location_no int, foreign key(location_no) references location(no)");
		createT("schedule", "no int primary key not null auto_increment, departure_location2_no int, arrival_location2_no int, `date` datetime, elapsed_time time, foreign key(departure_location2_no) references location2(no), foreign key(arrival_location2_no) references location2(no) ");
		createT("reservation", "no int primary key not null auto_increment, user_no int, schedule_no int, foreign key(user_no) references user(no), foreign key(schedule_no) references schedule(no)");
		createT("recommend", "no int primary key not null auto_increment, location_no int, foreign key(location_no) references location(no)");
		createT("recommend_info", "recommend_no int, title varchar(50), descrption varchar(1000), img longblob");

		var map = new HashMap<String, String>();
		map.put("부산", "busan");
		map.put("강원도", "gangwondo");
		map.put("광주", "gyeongju");
		map.put("전라남도", "Jeollanam-do");
		map.put("서울", "seoul");
		
		var rs = rs("select title, l.name, ri.recommend_no from recommend_info ri, recommend r, location l where ri.recommend_no=r.no and r.location_no = l.no");
		while(rs.next()) {
			System.out.println(map.get(rs.getString(2)));
			execute("update recommend_info set img =? where title=? and recommend_no=?", new FileInputStream(new File("./지급파일/images/recommend/"+map.get(rs.getString(2))+"/"+rs.getInt(1)+".jpg")), rs.getInt(1), rs.getInt(3));
		}
	}

	public static void main(String[] args) {
		try {
			new DB();
		} catch (SQLException | FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
